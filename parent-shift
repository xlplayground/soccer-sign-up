<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>BHES/Brit Am Soccer Practice Parent Signup</title>
    <style>
        :root {
            --primary-color: #2c3e50;
            --secondary-color: #34495e;
            --accent-color: #3498db;
            --background-color: #f5f6fa;
            --text-color: #333333;
            --card-background: #ffffff;
            --border-color: #e0e0e0;
        }
        body {
            font-family: 'Roboto', 'Helvetica', 'Arial', sans-serif;
            line-height: 1.6;
            margin: 0;
            padding: 0;
            background-color: var(--background-color);
            color: var(--text-color);
        }
        .container {
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
        }
        header {
            background-color: var(--primary-color);
            color: white;
            text-align: center;
            padding: 40px 0;
            margin-bottom: 30px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }
        h1 {
            margin: 0;
            font-size: 2.5em;
            font-weight: 300;
            letter-spacing: 1px;
        }
        .info-card, form, .schedule-container {
            background-color: var(--card-background);
            border-radius: 8px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
            padding: 25px;
            margin-bottom: 30px;
            border: 1px solid var(--border-color);
        }
        h2 {
            color: var(--secondary-color);
            border-bottom: 2px solid var(--accent-color);
            padding-bottom: 10px;
            margin-top: 0;
            font-weight: 400;
        }
        .info-item {
            display: flex;
            align-items: flex-start;
            margin-bottom: 20px;
        }
        .info-item svg {
            width: 24px;
            height: 24px;
            margin-right: 15px;
            flex-shrink: 0;
            color: var(--accent-color);
        }
        .info-content {
            flex-grow: 1;
        }
        .info-content h3 {
            margin: 0 0 10px 0;
            color: var(--secondary-color);
            font-weight: 500;
        }
        ul {
            margin: 0;
            padding-left: 20px;
        }
        form label {
            display: block;
            margin-bottom: 5px;
            font-weight: 500;
            color: var(--secondary-color);
        }
        form input[type="text"], form select {
            width: 100%;
            padding: 12px;
            margin-bottom: 20px;
            border: 1px solid var(--border-color);
            border-radius: 4px;
            font-size: 1em;
            transition: border-color 0.3s ease, box-shadow 0.3s ease;
        }
        form input[type="text"]:focus, form select:focus {
            outline: none;
            border-color: var(--accent-color);
            box-shadow: 0 0 0 2px rgba(52, 152, 219, 0.2);
        }
        form input[type="submit"] {
            background-color: var(--accent-color);
            color: white;
            padding: 12px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            font-size: 1em;
            font-weight: 500;
            transition: background-color 0.3s ease, transform 0.1s ease;
        }
        form input[type="submit"]:hover {
            background-color: #2980b9;
            transform: translateY(-1px);
        }
        form input[type="submit"]:active {
            transform: translateY(1px);
        }
        table {
            width: 100%;
            border-collapse: separate;
            border-spacing: 0;
            border: 1px solid var(--border-color);
            border-radius: 8px;
            overflow: hidden;
        }
        th, td {
            border: 1px solid var(--border-color);
            padding: 12px;
            text-align: left;
        }
        th {
            background-color: var(--secondary-color);
            color: white;
            font-weight: 500;
        }
        tr:nth-child(even) {
            background-color: #f8f9fa;
        }
        .calendar-button {
            background-color: #27ae60;
            color: white;
            padding: 10px 15px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            font-size: 0.9em;
            font-weight: 500;
            transition: background-color 0.3s ease;
            margin-top: 10px;
        }
        .calendar-button:hover {
            background-color: #2ecc71;
        }
        #successMessage {
            background-color: #d4edda;
            color: #155724;
            border: 1px solid #c3e6cb;
            border-radius: 4px;
            padding: 15px;
            margin-top: 20px;
            display: none;
        }
        #errorMessage {
            background-color: #f8d7da;
            color: #721c24;
            border: 1px solid #f5c6cb;
            border-radius: 4px;
            padding: 15px;
            margin-top: 20px;
            display: none;
        }
        @media screen and (max-width: 600px) {
            .container {
                padding: 10px;
            }
            h1 {
                font-size: 2em;
            }
            .info-card, form, .schedule-container {
                padding: 20px;
            }
        }
    </style>
</head>
<body>
    <header>
        <h1>BHES/Brit Am Soccer Practice Parent Signup</h1>
    </header>
    <div class="container">
        <div class="info-card">
            <h2>Parent Involvement Details</h2>
            <div class="info-item">
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                    <circle cx="12" cy="12" r="10"></circle>
                    <polyline points="12 6 12 12 16 14"></polyline>
                </svg>
                <div class="info-content">
                    <h3>Time Commitment</h3>
                    <p>3:30 PM to 4:20 PM on Fridays</p>
                </div>
            </div>
            <div class="info-item">
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                    <path d="M17 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2"></path>
                    <circle cx="9" cy="7" r="4"></circle>
                    <path d="M23 21v-2a4 4 0 0 0-3-3.87"></path>
                    <path d="M16 3.13a4 4 0 0 1 0 7.75"></path>
                </svg>
                <div class="info-content">
                    <h3>Main Responsibilities</h3>
                    <ul>
                        <li>Walk the kids to soccer practice, ensuring their safety</li>
                        <li>Assist children with putting on their cleats</li>
                        <li>Help distribute and collect soccer balls</li>
                        <li>Provide general support and encouragement to the children</li>
                    </ul>
                </div>
            </div>
            <div class="info-item">
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                    <path d="M21 10c0 7-9 13-9 13s-9-6-9-13a9 9 0 0 1 18 0z"></path>
                    <circle cx="12" cy="10" r="3"></circle>
                </svg>
                <div class="info-content">
                    <h3>Location</h3>
                    <p>Meet at the school's main entrance at 3:25 PM</p>
                </div>
            </div>
            <p>Your involvement makes a big difference in our young athletes' experience. We likely only need one parent there, but we're providing two slots for backup reasons. Thank you for volunteering!</p>
        </div>

        <form id="signupForm">
            <h2>Sign Up to Volunteer</h2>
            <label for="name">Your Name:</label>
            <input type="text" id="name" required placeholder="Enter your full name">
            
            <label for="date">Select a Date:</label>
            <select id="date" required>
                <option value="">Choose a Friday</option>
                <option value="2024-09-06">Friday, September 6, 2024</option>
                <option value="2024-09-13">Friday, September 13, 2024</option>
                <option value="2024-09-20">Friday, September 20, 2024</option>
                <option value="2024-09-27">Friday, September 27, 2024</option>
                <option value="2024-10-04">Friday, October 4, 2024</option>
                <option value="2024-10-11">Friday, October 11, 2024</option>
                <option value="2024-10-18">Friday, October 18, 2024</option>
                <option value="2024-10-25">Friday, October 25, 2024</option>
            </select>
            
            <input type="submit" value="Sign Up">
        </form>

        <div id="successMessage"></div>
        <div id="errorMessage"></div>

        <div class="schedule-container">
            <h2>Current Volunteer Schedule</h2>
            <table>
                <thead>
                    <tr>
                        <th>Date</th>
                        <th>Parent 1</th>
                        <th>Parent 2</th>
                    </tr>
                </thead>
                <tbody id="scheduleBody">
                    <!-- Schedule will be populated here -->
                </tbody>
            </table>
        </div>
    </div>

    <script>
        // Replace with your Google Apps Script web app URL
        const SCRIPT_URL = 'https://script.google.com/macros/s/AKfycbzCwonvkOP5DiRlOYMlI08w41OHB9xNoBSHB1a5R3S93_UIZVoHFm1G_YrEFUhBxkyzSQ/exec';

        async function getSchedule() {
            try {
                const response = await fetch(`${SCRIPT_URL}?action=getSchedule`);
                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }
                return await response.json();
            } catch (error) {
                console.error('Error fetching schedule:', error);
                showError(`Unable to fetch the current schedule. Error: ${error.message}`);
                return {};
            }
        }

        async function addSignup(date, name) {
            try {
                const response = await fetch(`${SCRIPT_URL}?action=addSignup&date=${date}&name=${name}`, {method: 'POST'});
                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }
                return await response.text();
            } catch (error) {
                console.error('Error adding signup:', error);
                showError(`Unable to process your signup. Error: ${error.message}`);
                return 'Error';
            }
        }

        async function updateScheduleDisplay() {
            const schedule = await getSchedule();
            const scheduleBody = document.getElementById('scheduleBody');
            if (scheduleBody) {
                scheduleBody.innerHTML = '';
                for (const [date, parents] of Object.entries(schedule)) {
                    const row = document.createElement('tr');
                    const formattedDate = new Date(date + 'T00:00:00').toLocaleDateString('en-US', { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' });
                    row.innerHTML = `
                        <td>${formattedDate}</td>
                        <td>${parents[0] || '-'}</td>
                        <td>${parents[1] || '-'}</td>
                    `;
                    scheduleBody.appendChild(row);
                }
            }
        }

        function generateICS(name, date) {
            const eventDate = new Date(date + 'T15:30:00'); // 3:30 PM
            const endDate = new Date(date + 'T16:20:00');   // 4:20 PM
            
            const icsContent = 
`BEGIN:VCALENDAR
VERSION:2.0
BEGIN:VEVENT
DTSTART:${formatDate(eventDate)}
DTEND:${formatDate(endDate)}
SUMMARY:Soccer Practice Volunteer Shift
DESCRIPTION:Thank you for volunteering! Remember to meet at the school's main entrance at 3:25 PM.
LOCATION:School Main Entrance
END:VEVENT
END:VCALENDAR`;

            return icsContent;
        }

        function formatDate(date) {
            return date.toISOString().replace(/-|:|\.\d+/g, '');
        }

        function downloadICS(name, date) {
            const icsContent = generateICS(name, date);
            const blob = new Blob([icsContent], { type: 'text/calendar;charset=utf-8' });
            const link = document.createElement('a');
            link.href = URL.createObjectURL(blob);
            link.download = 'soccer_volunteer_shift.ics';
            document.body.appendChild(link);
            link.click();
            document.body.removeChild(link);
        }

        function showError(message) {
            const errorMessage = document.getElementById('errorMessage');
            if (errorMessage) {
                errorMessage.textContent = message;
                errorMessage.style.display = 'block';
            }
        }

        function init
